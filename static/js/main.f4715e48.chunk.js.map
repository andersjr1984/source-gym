{"version":3,"sources":["components/navigation/Navigator.js","components/home/Home.js","components/profile/Profile.js","components/login/GoogleButton/GoogleAuthButton.js","components/login/LogIn.js","components/routing/PageDisplay.js","App.js","serviceWorker.js","index.js","components/logos/sourcelogotrans.png","components/login/GoogleButton/btn_google_dark_focus_ios.svg"],"names":["Navigator","useState","show","setShow","className","Navbar","to","src","translogo","alt","Nav","Dropdown","icon","faBars","onClick","Menu","faHome","faAddressCard","faSignInAlt","Home","Images","Carousel","interval","indicators","url","map","image","index","Item","key","Caption","Details","setKey","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","ContactForm","email","setEmail","name","setName","message","setMessage","Form","Row","Group","controlId","Label","Control","type","value","onChange","event","target","as","rows","Button","Profile","userProfile","profile","ProfilePic","props","Figure","Image","userImageSrc","thumbnail","faUser","style","maxHeight","width","minHeight","UserInfo","GoogleAuthButton","googleSignIn","a","alert","googleLogo","LogIn","redirect","setRedirect","SocialAuth","ButtonToolbar","EmailPassAuth","password","setPass","undefined","handleSubmit","preventDefault","newOrExisting","console","error","autoComplete","placeholder","variant","size","PageDisplay","path","component","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f4715e48.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './Navigator.css';\nimport {Navbar, Nav, Dropdown} from 'react-bootstrap';\nimport translogo from '../logos/sourcelogotrans.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faAddressCard, faSignOutAlt, \n  faSignInAlt, faBars } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n\nexport const Navigator = () => {\n  const [show, setShow] = useState(false);\n\n  return (\n    \n    <header className=\"App-header\">\n      <Navbar>\n        <Link className=\"nav-link\" to='/'>\n          <img src={translogo} alt=\"logo\" className=\"brand\"/>\n        </Link>\n        <Nav className=\"ml-auto\">\n          <Dropdown>\n            <FontAwesomeIcon icon={faBars} className=\"toggler\" onClick={()=>setShow(!show)}/>\n            <Dropdown.Menu className={show && 'show'}>\n              <Link to='/' onClick={()=>setShow(!show)}>\n                <FontAwesomeIcon icon={faHome} /> - Home\n              </Link>\n              <Link to='/Profile' onClick={()=>setShow(!show)}>\n                <FontAwesomeIcon icon={faAddressCard} /> - My Profile\n              </Link>\n              <Link to='/LogIn' onClick={()=>setShow(!show)}>\n                <FontAwesomeIcon icon={faSignInAlt}/> - Log In\n              </Link>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Nav>\n      </Navbar>\n    </header>\n  )\n}","import React, {useState} from 'react';\nimport './Home.css';\nimport { Carousel, Tab, Tabs, Form, Button } from 'react-bootstrap';\n\n\nexport const Home = () => {\n  return (\n    <>\n      <h1>The Source Gym</h1>\n      <Images/>\n      <Details/>\n    </>\n  )\n}\n\nconst Images = () => {\n  const areaImages = [\n    {\n      url: 'https://www.switchbacktravel.com/sites/default/files/images/landing-page/climbing%20%28header%29.jpg'\n    },\n    {\n      url: 'https://www.switchbacktravel.com/sites/default/files/images/articles/Beginner%20Climbing%20Shoes%20%28header%29_0.jpg'\n    },\n    {\n      url: 'https://d1vs4ggwgd7mlq.cloudfront.net/wp-content/uploads/2018/02/robert-baker-531539-unsplash-e1519072936677-934x563.jpg'\n    }\n  ]\n\n  return (\n    <Carousel interval={null} indicators={false}>\n      {areaImages.map((image, index) => {\n        return (\n          <Carousel.Item key={index}>\n            <img\n              className=\"d-block\"\n              src={image.url}\n              alt={`Slide ${index+1}`}\n            />\n            <Carousel.Caption>\n              Image {index+1}\n            </Carousel.Caption>\n          </Carousel.Item>\n        )\n      })}\n    </Carousel>\n  )\n}\n\nconst Details = () => {\n  const [key, setKey] = useState('Events');\n\n  return (\n    <Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={k => setKey(k)}>\n      <Tab eventKey=\"Events\" title=\"Events\">\n        Event calendar or news goes here!\n      </Tab>\n      <Tab eventKey=\"Location\" title=\"Location\">\n        Address and stuff goes here!\n      </Tab>\n      <Tab eventKey=\"Contact\" title=\"Contact Us\">\n        <ContactForm/>\n      </Tab>\n    </Tabs>\n  )\n}\n\nconst ContactForm = () => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n\n  return (\n    <Form>\n      <Form.Row>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"text\" value={email} onChange={event => setEmail(event.target.value)} />\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group controlId=\"formName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" value={name} onChange={event => setName(event.target.value)} />\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group>\n          <Form.Label>Message</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" value={message} onChange={event => setMessage(event.target.value)} />\n        </Form.Group>\n      </Form.Row>\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  )\n}","import React, {useState} from 'react';\nimport { Figure, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport './Profile.css'\n\nexport const Profile = () => {\n  const [userProfile, setUP] = useState(null);\n\n  return (\n    <div className=\"profile-content\">\n      <ProfilePic profile={userProfile}/>\n      <UserInfo profile={userProfile} />\n    </div>\n  )\n}\n\nconst ProfilePic = (props) => {\n  return (\n    <div className=\"profile-pic\">\n        <Figure className=\"user-pic\">\n          {props.profile ? \n            <Image src={props.profile.userImageSrc} thumbnail /> :\n            <FontAwesomeIcon icon={faUser} style={{maxHeight: \"200px\", width: \"150px\", minHeight: \"180px\"}}/>}\n            <Link to=\"/Profile/EditProPic\"><Figure.Caption>Edit Picture</Figure.Caption></Link>\n        </Figure>\n    </div>\n  );\n}\n\nconst UserInfo = () => {\n  return (\n    <div className=\"user-info\">\n      Member since: <br/>\n      Current expiration: <br/>\n    </div>\n  )\n}","import React from 'react';\n//import firebase, { auth } from '../../../utils/Firebase'\nimport googleLogo from './btn_google_dark_focus_ios.svg'\n\nexport const GoogleAuthButton = (props) => {\n  const googleSignIn = async () => {\n    alert('this will sign you in with googs')\n    // const authProRef =new firebase.auth.GoogleAuthProvider();\n    // try{\n    //   await auth.signInWithPopup(authProRef)\n    //   props.setRedirect(true);\n    // } catch (error) {\n    //   console.error(error)\n    // };\n  }\n\n  return (\n    <div className=\"google-auth-button\" onClick={googleSignIn}>\n      <div className=\"logo-container\">\n        <img src={googleLogo} alt=\"google logo\"/>\n      </div>\n      <span className=\"button-text\">\n        Sign in with Google\n      </span>\n    </div>\n  )\n}","import React, {useState, Fragment} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './LogIn.css';\nimport { Form, Button, ButtonToolbar } from 'react-bootstrap';\n\nimport { GoogleAuthButton } from './GoogleButton/GoogleAuthButton';\n\nimport './LogIn.css'\n\nexport const LogIn = () => {\n  const [redirect, setRedirect]=useState(false);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />\n  } else {\n    return (\n    <div className=\"log-in\">\n      <EmailPassAuth setRedirect={setRedirect}/>\n      <SocialAuth setRedirect={setRedirect}/>\n    </div>)\n  }\n}\n\nconst SocialAuth = (props) => {\n  return (\n    <ButtonToolbar>\n      <GoogleAuthButton \n        setRedirect={props.setRedirect}\n      />\n    </ButtonToolbar>\n  )\n}\n\nconst EmailPassAuth = (props) => {\n  const [email, setEmail]=useState('');\n  const [password, setPass]=useState('');\n  const [message, setMessage]=useState(undefined);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const newOrExisting = event.target.id;\n    if (newOrExisting === \"new\") {\n      try {\n        //await firebase.auth().createUserWithEmailAndPassword(email, password);\n        return props.setRedirect(true);\n      }\n      catch (error) {\n        console.error(error);\n        setMessage(error.message);\n      }\n    }\n    else if (newOrExisting===\"existing\") {\n      try {\n        //await firebase.auth().signInWithEmailAndPassword(email, password);\n      }\n      catch (error) {\n        console.error(error);\n        setMessage(error.message);\n      }\n    } else {\n      setMessage(\"An unknown error has occurred. Please contact administrator if this continues.\");\n    }\n  }\n\n  return (\n    <Fragment>\n      <h3>Log-in Options:</h3>\n      {message && <h5>{message}</h5>}\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label><i className=\"fas fa-at\"></i></Form.Label>\n          <Form.Control \n            autoComplete=\"email\" \n            type=\"email\" \n            placeholder=\"Enter email\" \n            value={email} \n            name=\"email\" \n            onChange={(event) => setEmail(event.target.value)} \n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label><i className=\"fas fa-lock\"></i></Form.Label>\n          <Form.Control \n            type=\"password\" \n            autoComplete='current-password' \n            placeholder=\"Password\" \n            value={password} \n            name=\"password\" \n            onChange={(event) => setPass(event.target.value)} />\n        </Form.Group>\n        <ButtonToolbar>\n          <Button \n            variant=\"outline-success\" \n            size=\"sm\" \n            id=\"existing\"\n            onClick={(event)=>handleSubmit(event)}\n          >\n            Sign In\n          </Button>\n          <Button \n            variant=\"outline-success\" \n            size=\"sm\" \n            id=\"new\" \n            onClick={(event)=>handleSubmit(event)}\n          >\n            Create\n          </Button>\n        </ButtonToolbar>\n      </Form>\n    </Fragment>\n  )\n}","import React from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport { Navigator } from '../navigation/Navigator';\nimport { Home } from '../home/Home';\nimport { Profile } from '../profile/Profile';\nimport { LogIn } from '../login/LogIn';\n\nexport const PageDisplay = () => {\n  return (\n    <main>\n      <Router>\n        <Route\n          path='/'\n          component={Navigator}\n        />\n        <div className=\"content\">\n          <Switch>\n            <Route\n              exact={true}\n              path='/Profile'\n              component={Profile}\n            />\n            <Route \n              exact={true}\n              path='/LogIn' \n              component={LogIn}\n            />\n            <Route \n              exact={true}\n              path='/' \n              component={Home}\n            />\n          </Switch>\n          <small>Website by the green owl.</small>\n        </div>\n      </Router>\n    </main>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { Navigator } from './components/navigation/Navigator';\nimport { PageDisplay } from './components/routing/PageDisplay';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageDisplay/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sourcelogotrans.802bd682.png\";","module.exports = __webpack_public_path__ + \"static/media/btn_google_dark_focus_ios.ef5056c5.svg\";"],"sourceRoot":""}